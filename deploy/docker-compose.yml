version: '3'

services:
  db:
    image: ${DB_CONTAINER_IMAGE}
    container_name: ${DB_CONTAINER_NAME}
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${APP_DB_NAME}", "-U", "${POSTGRES_USER}" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - APP_DB_USER
      - APP_DB_PASS
      - APP_DB_NAME
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d/
      - posts_analyser_db_volume:/var/lib/postgresql/data

  db_controller_service:
    image: ${DB_CONTROLLER_SERVICE_CONTAINER_IMAGE}
    container_name: ${DB_CONTROLLER_SERVICE_CONTAINER_NAME}
    restart: always
    entrypoint: db-controller-service
    env_file:
      - microservices_defaults/db-controller.env
    environment:
      - APP_DB_USER
      - APP_DB_PASS
      - APP_DB_NAME
      - PASSWD_MIN_LENGTH
      - PASSWD_MAX_LENGTH
      - PASSWD_UPPERCASE
      - PASSWD_NUMBERS
      - PASSWD_SPECIAL
      - FILE_LOG_DIR

    ports:
      - ${DB_CONTROLLER_SERVICE_PORT:?err}:60052
    depends_on:
      db:
        condition: service_healthy

    links:
      - db

    volumes:
      - ./log:${FILE_LOG_DIR:?err}

volumes:
  posts_analyser_db_volume:
    labels:
      - "Posts Analyser Database Volume"
